// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	models "final-project-backend/internal/models"

	mock "github.com/stretchr/testify/mock"
)

// ISubscriptionService is an autogenerated mock type for the ISubscriptionService type
type ISubscriptionService struct {
	mock.Mock
}

// GetAll provides a mock function with given fields:
func (_m *ISubscriptionService) GetAll() ([]*models.Subscription, error) {
	ret := _m.Called()

	var r0 []*models.Subscription
	if rf, ok := ret.Get(0).(func() []*models.Subscription); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Subscription)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewISubscriptionService interface {
	mock.TestingT
	Cleanup(func())
}

// NewISubscriptionService creates a new instance of ISubscriptionService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewISubscriptionService(t mockConstructorTestingTNewISubscriptionService) *ISubscriptionService {
	mock := &ISubscriptionService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
