// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	models "final-project-backend/internal/models"

	mock "github.com/stretchr/testify/mock"
)

// IVoucherService is an autogenerated mock type for the IVoucherService type
type IVoucherService struct {
	mock.Mock
}

// GetAll provides a mock function with given fields:
func (_m *IVoucherService) GetAll() ([]*models.Voucher, error) {
	ret := _m.Called()

	var r0 []*models.Voucher
	if rf, ok := ret.Get(0).(func() []*models.Voucher); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Voucher)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetUserVouchersByID provides a mock function with given fields: userID
func (_m *IVoucherService) GetUserVouchersByID(userID int64) ([]*models.UserVoucher, error) {
	ret := _m.Called(userID)

	var r0 []*models.UserVoucher
	if rf, ok := ret.Get(0).(func(int64) []*models.UserVoucher); ok {
		r0 = rf(userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.UserVoucher)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int64) error); ok {
		r1 = rf(userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewIVoucherService interface {
	mock.TestingT
	Cleanup(func())
}

// NewIVoucherService creates a new instance of IVoucherService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIVoucherService(t mockConstructorTestingTNewIVoucherService) *IVoucherService {
	mock := &IVoucherService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
